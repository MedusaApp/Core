{
    "openapi": "3.0.0",
    "info": {
        "title": "Medusa Core API",
        "description": "This is the Medusa Core API. Most routes are protected with JWT authentication.",
        "contact": {
            "email": "mdoc@trmn.org"
        },
        "license": {
            "name": "GPL 3.0",
            "url": "https://www.gnu.org/licenses/gpl-3.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "description": "Attempts to login",
                "operationId": "login",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The email for login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful login"
                    },
                    "401": {
                        "description": "failed to login"
                    }
                }
            }
        },
        "/api/v1/branches": {
            "get": {
                "tags": [
                    "Branches"
                ],
                "summary": "Get list of branches",
                "description": "Returns a list of branches ordered by abbreviation.",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "bad request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Branches"
                ],
                "summary": "Create a new branch",
                "description": "Creates a new branch",
                "operationId": "store",
                "requestBody": {
                    "request": "Branch",
                    "description": "Branch object to be added",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Branch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "branch successfully created"
                    },
                    "403": {
                        "description": "permission denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/branches/{id}": {
            "get": {
                "tags": [
                    "Branches"
                ],
                "summary": "Retrieve the given branch",
                "description": "Retrieves the given branch",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the branch to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "branch retrieved"
                    },
                    "403": {
                        "description": "permission denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Branches"
                ],
                "summary": "Update the given branch",
                "description": "Updates the given branch",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the branch to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "request": "Branch",
                    "description": "Branch object to be modified",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Branch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "branch successfully modified"
                    },
                    "403": {
                        "description": "permission denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Branches"
                ],
                "summary": "Delete the given branch",
                "description": "Deletes the given branch. Note: this is a hard delete.",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the branch to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "branch successfully deleted"
                    },
                    "403": {
                        "description": "permission denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/chapters": {
            "get": {
                "tags": [
                    "Chapter"
                ],
                "summary": "Get list of chapters",
                "description": "Returns a list of chapters ordered by name.",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "bad request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Chapter"
                ],
                "summary": "Create a new chapter",
                "description": "Creates a new chapter",
                "operationId": "store",
                "requestBody": {
                    "request": "Chapter Type",
                    "description": "Chapter object to be added",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Chapter"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "chapter successfully created"
                    },
                    "403": {
                        "description": "permission denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/chapters/{id}": {
            "get": {
                "tags": [
                    "Chapter"
                ],
                "summary": "Retrieve the given chapter",
                "description": "Retrieves the given chapter",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the chapter to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "chapter retrieved"
                    },
                    "403": {
                        "description": "permission denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Chapter"
                ],
                "summary": "Update the given chapter",
                "description": "Updates the given chapter",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the chapter to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "request": "Chapter",
                    "description": "Chapter object to be modified",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Chapter"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "chapter successfully modified"
                    },
                    "403": {
                        "description": "permission denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Chapter"
                ],
                "summary": "Delete the given chapter",
                "description": "Deletes the given chapter. Note: this is a hard delete.",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the chapter to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "chapter successfully deleted"
                    },
                    "403": {
                        "description": "permission denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/chapters/{id}/members": {
            "get": {
                "tags": [
                    "Chapter"
                ],
                "summary": "Retrieve the given chapter's member list",
                "description": "Retrieves the given chapter's member list",
                "operationId": "members",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the chapter to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "chapter member list retrieved"
                    },
                    "403": {
                        "description": "permission denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/chaptertypes": {
            "get": {
                "tags": [
                    "Chapter Types"
                ],
                "summary": "Get list of chapter types",
                "description": "Returns a list of chapter types ordered by abbreviation.",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "bad request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Chapter Types"
                ],
                "summary": "Create a new chapter type",
                "description": "Creates a new chapter type",
                "operationId": "store",
                "requestBody": {
                    "request": "Chapter Type",
                    "description": "Chapter type object to be added",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChapterType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "chapter type successfully created"
                    },
                    "403": {
                        "description": "permission denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/chaptertypes/{id}": {
            "get": {
                "tags": [
                    "Chapter Types"
                ],
                "summary": "Retrieve the given chapter type",
                "description": "Retrieves the given chapter type",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the chapter type to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "chapter type retrieved"
                    },
                    "403": {
                        "description": "permission denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Chapter Types"
                ],
                "summary": "Update the given chapter type",
                "description": "Updates the given chapter type",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the chapter type to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "request": "ChapterType",
                    "description": "Chapter type object to be modified",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChapterType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "chapter type successfully modified"
                    },
                    "403": {
                        "description": "permission denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Chapter Types"
                ],
                "summary": "Delete the given chapter type",
                "description": "Deletes the given chapter type. Note: this is a hard delete.",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the chapter type to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "chapter type successfully deleted"
                    },
                    "403": {
                        "description": "permission denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/countries": {
            "get": {
                "tags": [
                    "Countries"
                ],
                "summary": "Get list of countries",
                "description": "Returns a list of countries by CCA3 code",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/api/v1/countries/{cca3}": {
            "get": {
                "tags": [
                    "Countries"
                ],
                "summary": "Get single country data",
                "description": "Returns all data for a single country specified by CCA3 code",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "cca3",
                        "in": "path",
                        "description": "Country CCA3 code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/api/v1/countries/{cca3}/states": {
            "get": {
                "tags": [
                    "Countries"
                ],
                "summary": "Get list of states",
                "description": "Returns a list of states for a given country specified by CCA3 code",
                "operationId": "getStates",
                "parameters": [
                    {
                        "name": "cca3",
                        "in": "path",
                        "description": "Country CCA3 code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/api/v1/shipclasses": {
            "get": {
                "tags": [
                    "Ship Classes"
                ],
                "summary": "Get list of ship classes",
                "description": "Returns a list of ship classes ordered by abbreviation.",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "bad request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ship Classes"
                ],
                "summary": "Create a new ship class",
                "description": "Creates a new ship class",
                "operationId": "store",
                "requestBody": {
                    "request": "Ship Class",
                    "description": "Ship class object to be added",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipClass"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ship class successfully created"
                    },
                    "403": {
                        "description": "permission denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/shipclasses/{id}": {
            "get": {
                "tags": [
                    "Ship Classes"
                ],
                "summary": "Retrieve the given ship class",
                "description": "Retrieves the given ship class",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ship class to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ship class retrieved"
                    },
                    "403": {
                        "description": "permission denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Ship Classes"
                ],
                "summary": "Update the given ship class",
                "description": "Updates the given ship class",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ship class to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "request": "ShipClass",
                    "description": "Ship class object to be modified",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipClass"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ship class successfully modified"
                    },
                    "403": {
                        "description": "permission denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Ship Classes"
                ],
                "summary": "Delete the given ship class",
                "description": "Deletes the given ship class. Note: this is a hard delete.",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ship class to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ship class successfully deleted"
                    },
                    "403": {
                        "description": "permission denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/shiptypes": {
            "get": {
                "tags": [
                    "Ship Types"
                ],
                "summary": "Get list of ship types",
                "description": "Returns a list of ship types ordered by abbreviation.",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "bad request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ship Types"
                ],
                "summary": "Create a new ship type",
                "description": "Creates a new ship type",
                "operationId": "store",
                "requestBody": {
                    "request": "Ship Type",
                    "description": "Ship type object to be added",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ship type successfully created"
                    },
                    "403": {
                        "description": "permission denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/shiptypes/{id}": {
            "get": {
                "tags": [
                    "Ship Types"
                ],
                "summary": "Retrieve the given ship type",
                "description": "Retrieves the given ship type",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ship type to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ship type retrieved"
                    },
                    "403": {
                        "description": "permission denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Ship Types"
                ],
                "summary": "Update the given ship type",
                "description": "Updates the given ship type",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ship type to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "request": "ShipType",
                    "description": "Ship type object to be modified",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ship type successfully modified"
                    },
                    "403": {
                        "description": "permission denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Ship Types"
                ],
                "summary": "Delete the given ship type",
                "description": "Deletes the given ship type. Note: this is a hard delete.",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the ship type to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ship type successfully deleted"
                    },
                    "403": {
                        "description": "permission denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "description": "Returns a list of users ordered by last name and first name",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "bad request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "description": "Creates a new user",
                "operationId": "store",
                "requestBody": {
                    "request": "User",
                    "description": "User object to be added",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "user successfully created"
                    },
                    "403": {
                        "description": "permission denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve the given user",
                "description": "Retrieves the given user, without hidden fields like password",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user retrieved"
                    },
                    "403": {
                        "description": "permission denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update the given user",
                "description": "Updates the given user",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "request": "User",
                    "description": "User object to be modified",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "user successfully modified"
                    },
                    "403": {
                        "description": "permission denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete the given user",
                "description": "Deletes the given user. Note: this is a hard delete.",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user successfully deleted"
                    },
                    "403": {
                        "description": "permission denied"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Branch": {
                "description": "Class Branch",
                "properties": {
                    "abbreviation": {
                        "description": "The abbreviated version of the branch's name",
                        "type": "string"
                    },
                    "name": {
                        "description": "The full name of the branch",
                        "type": "string"
                    },
                    "is_civilian": {
                        "description": "Is this branch a civilian branch?",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "Chapter": {
                "description": "Class Chapter",
                "properties": {
                    "name": {
                        "description": "The name of the chapter",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is this chapter active?",
                        "type": "boolean"
                    },
                    "chapter_type_id": {
                        "description": "The type of chapter",
                        "type": "integer"
                    },
                    "hull_number": {
                        "description": "The hull number for the chapter",
                        "type": "string"
                    },
                    "is_joinable": {
                        "description": "Is this chapter joinable?",
                        "type": "boolean"
                    },
                    "ship_class_id": {
                        "description": "The ship class for the chapter",
                        "type": "integer"
                    },
                    "branch_id": {
                        "description": "The branch that the chapter belongs to",
                        "type": "integer"
                    },
                    "chapter_id": {
                        "description": "If this belongs to another chapter, this is its ID",
                        "type": "integer"
                    },
                    "commission_date": {
                        "description": "The date the chapter was commissioned on",
                        "type": "string"
                    },
                    "decommission_date": {
                        "description": "The date the chapter was decommissioned on",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ChapterType": {
                "description": "Class ChapterType",
                "properties": {
                    "has_command_triad": {
                        "description": "Whether this chapter type has a command triad or not",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "The full name of the chapter type",
                        "type": "string"
                    },
                    "slug": {
                        "description": "The slug of the chapter type",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Permission": {
                "description": "Class Permission",
                "properties": {
                    "name": {
                        "description": "Permission name",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Unique identifying slug for the permission",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Role": {
                "description": "Class Role",
                "properties": {
                    "name": {
                        "description": "Role name",
                        "type": "string"
                    },
                    "slug": {
                        "description": "Unique identifying slug for the role",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ShipClass": {
                "description": "Class ShipClass",
                "properties": {
                    "name": {
                        "description": "The full name of the ship class",
                        "type": "string"
                    },
                    "image_url": {
                        "description": "A URL to an image of the ship class",
                        "type": "string"
                    },
                    "crew_max": {
                        "description": "The maximum crew",
                        "type": "integer"
                    },
                    "crew_min": {
                        "description": "The minimum crew",
                        "type": "integer"
                    },
                    "officer_min": {
                        "description": "The minimum officer count",
                        "type": "integer"
                    },
                    "type_order": {
                        "description": "The type order",
                        "type": "integer"
                    },
                    "ship_type_id": {
                        "description": "The ID of the ship type",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ShipType": {
                "description": "Class ShipType",
                "properties": {
                    "abbreviation": {
                        "description": "The abbreviated version of the ship type's name",
                        "type": "string"
                    },
                    "name": {
                        "description": "The full name of the ship type",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "User": {
                "description": "Class User",
                "properties": {
                    "first_name": {
                        "description": "First name",
                        "type": "string"
                    },
                    "middle_name": {
                        "description": "Middle name",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "Last name",
                        "type": "string"
                    },
                    "phone_number": {
                        "description": "Phone number",
                        "type": "string"
                    },
                    "date_of_birth": {
                        "description": "Date of birth, in yyyy-mm-dd format",
                        "type": "string"
                    },
                    "address_line_1": {
                        "description": "Address line one",
                        "type": "string"
                    },
                    "address_line_2": {
                        "description": "Address line two",
                        "type": "string"
                    },
                    "city": {
                        "description": "City",
                        "type": "string"
                    },
                    "province_or_state": {
                        "description": "Province or state",
                        "type": "string"
                    },
                    "postal_code": {
                        "description": "Postal code",
                        "type": "string"
                    },
                    "country": {
                        "description": "Country",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is active?",
                        "type": "boolean"
                    },
                    "email": {
                        "description": "Email address",
                        "type": "string"
                    },
                    "password": {
                        "description": "Password",
                        "type": "string"
                    },
                    "branch_id": {
                        "description": "ID of the branch the user belongs to",
                        "type": "integer"
                    },
                    "chapter_id": {
                        "description": "ID of the chapter the user belongs to",
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearer_token": {
                "type": "apiKey",
                "description": "Enter token in format (bearer $bearertoken$)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Authentication routes."
        },
        {
            "name": "Branches",
            "description": "Branch control routes."
        },
        {
            "name": "Chapter",
            "description": "Chapter control routes."
        },
        {
            "name": "Chapter Types",
            "description": "Chapter type control routes."
        },
        {
            "name": "Countries",
            "description": "Routes for standardizing country data. These are not protected by authorization."
        },
        {
            "name": "Ship Classes",
            "description": "Ship class control routes."
        },
        {
            "name": "Ship Types",
            "description": "Ship type control routes."
        },
        {
            "name": "Users",
            "description": "User control routes."
        }
    ],
    "security": [
        []
    ]
}